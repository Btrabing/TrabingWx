<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://btrabing.github.io/TrabingWx/feed.xml" rel="self" type="application/atom+xml"/><link href="https://btrabing.github.io/TrabingWx/" rel="alternate" type="text/html" hreflang="en"/><updated>2023-10-06T19:04:13+00:00</updated><id>https://btrabing.github.io/TrabingWx/feed.xml</id><title type="html">blank</title><subtitle>Lets discuss the weather. </subtitle><entry><title type="html">El Niño and Hurricanes</title><link href="https://btrabing.github.io/TrabingWx/blog/2023/enso-2023/" rel="alternate" type="text/html" title="El Niño and Hurricanes"/><published>2023-10-06T12:59:00+00:00</published><updated>2023-10-06T12:59:00+00:00</updated><id>https://btrabing.github.io/TrabingWx/blog/2023/enso-2023</id><content type="html" xml:base="https://btrabing.github.io/TrabingWx/blog/2023/enso-2023/"><![CDATA[<p>Seasonal forecasts for the 2023 Atlantic hurricane season were below normal as the forecast for the El Niño Southern Oscillation (ENSO) shifted towards an El Niño. Then the forecasts shifted to average or slightly above average as the season began depending on average. So what changed?</p> <p>Over the last few years we have had La Niña conditions. During La Niña equatorial ocean water in the Pacific are cooler than normal. The result tends to be a more active Atlantic hurricane season due to a reduction in vertical wind shear (see 2020). Hurricanes can strengthen quickly when there is no vertical wind shear and all other conditions are favorable.</p> <p>So during an El Niño when the equatorial Pacific sea surface temperature (SST) is above normal, we would expect to see less hurricanes in the Atlantic due to stronger than average vertical wind shear. So why are we expecting more Atlantic hurricanes in 2023 instead of less?</p> <p>The reason is because the sea surface temperature in the Atlantic is hotter than normal over a large area. Hurricanes need warm ocean waters to form, and the hotter the water, the stronger they can get. So the El Niño and warm SST are working against each other and almost balancing out.</p> <p>Since the Atlantic is a large basin, strong vertical wind shear doesn’t always cover the entire basin. Warmer SST over a larger area means that hurricanes can form over a larger area. And this is how we get towards a slightly above average season in the Atlantic.</p> <p>Although ENSO plays a large role in how the Atlantic hurricane season will play out, it is not the only factor. It is also important to remember that regardless of whether it is an active or below-average season, it only takes one hurricane to cause catastrophic damage. Always be prepared.</p>]]></content><author><name></name></author><category term="ENSO"/><category term="Discussion"/><category term="Hurricane"/><category term="2023"/><summary type="html"><![CDATA[Not a normal ENSO]]></summary></entry><entry><title type="html">a post with diagrams</title><link href="https://btrabing.github.io/TrabingWx/blog/2021/plot-discont/" rel="alternate" type="text/html" title="a post with diagrams"/><published>2021-12-10T17:39:00+00:00</published><updated>2021-12-10T17:39:00+00:00</updated><id>https://btrabing.github.io/TrabingWx/blog/2021/plot-discont</id><content type="html" xml:base="https://btrabing.github.io/TrabingWx/blog/2021/plot-discont/"><![CDATA[<p>If you have ever had to make a plot of winds where there is a jump between 270 degrees and 30 degrees, you understand that a line connecting those points looks ugly. I wrote some code to address that issue by adding in <code class="language-plaintext highlighter-rouge">nan</code> values whenever a threshold is met. Take a look at the following code and let me know if you have any suggestions. Depending on the resolution of the data, you may need to interpolate it to a fine resolution before applying this technique.</p> <h2 id="code">Code</h2> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python
</span>
<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">from</span> <span class="n">matplotlib</span> <span class="kn">import</span> <span class="n">pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="k">def</span> <span class="nf">remove_discont</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">):</span>
    <span class="sh">'''</span><span class="s">
    This function will insert nan values when there is a large disconuity in the y data
    
    Requires:
     inport numpy as np
     
    Input:
     x    : array of values on x axis
     y    : array of values on y axis
    
    Set:
     disc_thresh : a tunable threshhold to add nans to
     
    Output:
     x    : new x array with nan values inserted near discrepencies
     y   : new y array with nan values inserted near discrepencies
     
    Use:
     new_x, new_y = plot_discont(x,y)
    
    </span><span class="sh">'''</span>
    
    <span class="c1"># Set disconuity threshhold
</span>    <span class="n">disc_thresh</span> <span class="o">=</span> <span class="mf">330.</span>
    
    <span class="c1"># Calculate the position of the disconuities
</span>    <span class="n">pos</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">where</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">abs</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">diff</span><span class="p">(</span><span class="n">y</span><span class="p">))</span> <span class="o">&gt;=</span> <span class="n">disc_thresh</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span>
    
    <span class="c1"># Insert nan values
</span>    <span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">insert</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">pos</span><span class="p">,</span><span class="n">np</span><span class="p">.</span><span class="n">nan</span><span class="p">)</span>
    <span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">insert</span><span class="p">(</span><span class="n">y</span><span class="p">,</span><span class="n">pos</span><span class="p">,</span><span class="n">np</span><span class="p">.</span><span class="n">nan</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span>

<span class="k">if</span> <span class="n">__name__</span><span class="o">==</span><span class="sh">'</span><span class="s">__main__</span><span class="sh">'</span><span class="p">:</span>
    <span class="c1">## Test
</span>
    <span class="c1"># Sample data
</span>    <span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">linspace</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">50</span><span class="p">)</span>
    <span class="n">y</span> <span class="o">=</span> <span class="mi">180</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="nf">cos</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">pi</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="nf">linspace</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">50</span><span class="p">))</span><span class="o">+</span><span class="mf">180.</span>

    <span class="n">y</span><span class="p">[</span><span class="mi">26</span><span class="p">:</span><span class="mi">28</span><span class="p">]</span><span class="o">=</span><span class="mi">4</span> <span class="c1"># add disconuity
</span>
    <span class="c1"># Create plot
</span>    <span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
    <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplot</span><span class="p">(</span><span class="mi">111</span><span class="p">)</span>

    <span class="c1"># Plot test data
</span>    <span class="n">ax</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">c</span><span class="o">=</span><span class="sh">'</span><span class="s">k</span><span class="sh">'</span><span class="p">,</span><span class="n">lw</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="n">alpha</span><span class="o">=</span><span class="p">.</span><span class="mi">6</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">Before</span><span class="sh">'</span><span class="p">)</span> <span class="c1"># plot data
</span>
    <span class="c1"># Get new data
</span>    <span class="n">new_x</span><span class="p">,</span> <span class="n">new_y</span> <span class="o">=</span> <span class="nf">remove_discont</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span>

    <span class="c1">#Plot new data
</span>    <span class="n">ax</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">new_x</span><span class="p">,</span><span class="n">new_y</span> <span class="p">,</span><span class="n">c</span><span class="o">=</span><span class="sh">'</span><span class="s">r</span><span class="sh">'</span><span class="p">,</span><span class="n">lw</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="n">ls</span><span class="o">=</span><span class="sh">'</span><span class="s">dashed</span><span class="sh">'</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">After</span><span class="sh">'</span><span class="p">)</span>

    <span class="n">ax</span><span class="p">.</span><span class="nf">set_ylim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">360</span><span class="p">)</span> <span class="c1">#set boundary
</span>
    <span class="n">ax</span><span class="p">.</span><span class="nf">legend</span><span class="p">()</span> <span class="c1">#add legend
</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">savefig</span><span class="p">(</span><span class="sh">'</span><span class="s">Discontinuity.png</span><span class="sh">'</span><span class="p">,</span><span class="n">bbox_inches</span><span class="o">=</span><span class="sh">'</span><span class="s">tight</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>



</code></pre></div></div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/TrabingWx/assets/img/Discontinuity-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/TrabingWx/assets/img/Discontinuity-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/TrabingWx/assets/img/Discontinuity-1400.webp"/> <img src="/TrabingWx/assets/img/Discontinuity.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="Discontinuity" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> A before and after of the line plots after using the discontinuity function. </div>]]></content><author><name></name></author><category term="Python"/><category term="plotting"/><summary type="html"><![CDATA[Plotting a line plot with discontinuous data points]]></summary></entry><entry><title type="html">Plotting with Python</title><link href="https://btrabing.github.io/TrabingWx/blog/2018/contour/" rel="alternate" type="text/html" title="Plotting with Python"/><published>2018-09-20T17:39:00+00:00</published><updated>2018-09-20T17:39:00+00:00</updated><id>https://btrabing.github.io/TrabingWx/blog/2018/contour</id><content type="html" xml:base="https://btrabing.github.io/TrabingWx/blog/2018/contour/"><![CDATA[<p>A how to example for plotting contours in the form of a jupyter notebook that has been converted to html.</p>]]></content><author><name></name></author><category term="Python"/><category term="Matplotlib"/><category term="Example"/><summary type="html"><![CDATA[A how to example for plotting contours]]></summary></entry></feed>